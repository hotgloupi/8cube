project(8cube)

cmake_minimum_required(VERSION 2.8)
set(CMAKE_MODULE_PATH
	"${CMAKE_MODULE_PATH}"
	"${CMAKE_SOURCE_DIR}/cmake/Modules"
)

if(NOT CMAKE_BUILD_TYPE)
	set(CMAKE_BUILD_TYPE DEBUG CACHE STRING "Build type" FORCE)
	set(BUILD_TYPE DEBUG)
endif()

if(BUILD_TYPE)
	string(TOUPPER "${BUILD_TYPE}" BUILD_TYPE)
endif()
string(TOUPPER "${CMAKE_BUILD_TYPE}" CMAKE_BUILD_TYPE)

if(BUILD_TYPE AND NOT(BUILD_TYPE STREQUAL CMAKE_BUILD_TYPE))
	set(CMAKE_BUILD_TYPE ${BUILD_TYPE} CACHE BOOL "Build type" FORCE)
	message(STATUS "Force build type: ${CMAKE_BUILD_TYPE}")
	set(BUILD_TYPE_CHANGED TRUE)
else()
	set(BUILD_TYPE ${CMAKE_BUILD_TYPE})
	set(BUILD_TYPE_CHANGED FALSE)
endif()

message(STATUS "Build type: ${BUILD_TYPE}")


set(RELEASE_DIRECTORY
	"${CMAKE_CURRENT_BINARY_DIR}/release"
)

set(EXECUTABLE_OUTPUT_PATH
	"${RELEASE_DIRECTORY}/bin"
)

set(LIBRARY_OUTPUT_PATH
	"${RELEASE_DIRECTORY}/lib"
)

set(PYTHON_LIBRARY_OUTPUT_PATH
	"${LIBRARY_OUTPUT_PATH}/python"
)

set(CUBE_OUTPUT_PATH
	"${PYTHON_LIBRARY_OUTPUT_PATH}/cube"
)

set(CUBEAPP_OUTPUT_PATH
	"${PYTHON_LIBRARY_OUTPUT_PATH}/cubeapp"
)

add_subdirectory(src)
