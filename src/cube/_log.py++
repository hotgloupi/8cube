#include <wrappers/boost/python.hpp>

#include <etc/log.hpp>

#include <unordered_set>

namespace {

	char const* static_storage(std::string&& str)
	{
		static std::unordered_set<std::string> storage;
		return storage.emplace(std::move(str)).first->c_str();
	}

	void send(etc::log::Level level,
		      std::string file,
		      etc::size_type line,
		      std::string function,
		      std::string component,
		      std::string msg)
	{
		etc::log::Log{
			level,
			static_storage(std::move(file)),
			line,
			static_storage(std::move(function)),
			static_storage(std::move(component)),
		}.send(std::move(msg));
	}

}

BOOST_PYTHON_MODULE(_log)
{
	namespace py = boost::python;

	py::enum_<etc::log::Level>("Level")
		.value("debug", etc::log::Level::debug)
		.value("info",  etc::log::Level::info)
		.value("warn",  etc::log::Level::warn)
		.value("error", etc::log::Level::error)
		.value("fatal", etc::log::Level::fatal)
	;

	py::def("send", &send);

}

