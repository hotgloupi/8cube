#include <wrappers/boost/python.hpp>

#include "frustum.hpp"

BOOST_PYTHON_MODULE(frustum)
{
	namespace py = boost::python;
	using namespace cube::gl::frustum;

	py::enum_<PlanePosition>("PlanePosition")
		.value("top", PlanePosition::top)
		.value("bottom", PlanePosition::bottom)
		.value("left", PlanePosition::left)
		.value("right", PlanePosition::right)
		.value("near", PlanePosition::near)
		.value("far", PlanePosition::far)
	;

#define EXPORT_FRUSTUM(__type, __suffix)                                      \
	py::class_<Frustum<__type>>("Frustum" #__suffix, py::no_init)             \
		.def(py::init<cube::units::Angle, float, __type, __type>())                        \
		.def("update", &Frustum<__type>::update)                              \
		.def(                                                                 \
			"plane",                                                          \
			&Frustum<__type>::plane,                                          \
			py::return_internal_reference<>()                                 \
		)                                                                     \
		.def("contains", &Frustum<__type>::contains)                          \
		.def("intersect", &Frustum<__type>::intersect)                        \
	/**/

	EXPORT_FRUSTUM(float, f);
	EXPORT_FRUSTUM(double, d);
	EXPORT_FRUSTUM(int32_t, i);
	//EXPORT_FRUSTUM(uint32_t, u);
	EXPORT_FRUSTUM(int64_t, il);
	//EXPORT_FRUSTUM(uint64_t, ul);
}
